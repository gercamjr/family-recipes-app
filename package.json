{
  "name": "family-recipes-app",
  "version": "1.0.0",
  "description": "Secure, invite-only web app for family recipes with role-based access and bilingual support",
  "private": true,
  "workspaces": [
    "frontend",
    "backend"
  ],
  "scripts": {
    "install-all": "npm install",
    "build": "npm run build --workspaces",
    "test": "npm test --workspaces",
    "lint": "npm run lint --workspaces",
    "dev": "npm run dev --workspaces",
    "docker:up": "docker compose up -d",
    "docker:up-logs": "docker compose up",
    "docker:down": "docker compose down",
    "docker:build": "docker compose build",
    "docker:rebuild": "docker compose build --no-cache",
    "docker:logs": "docker compose logs -f",
    "docker:logs-backend": "docker compose logs -f backend",
    "docker:logs-frontend": "docker compose logs -f frontend",
    "docker:logs-db": "docker compose logs -f postgres",
    "docker:db-connect": "docker compose exec postgres psql -U family_recipes_user -d family_recipes_db",
    "docker:db-reset": "docker compose down -v && docker compose up -d postgres && echo 'Waiting for database to be ready...' && sleep 10 && docker compose up -d backend",
    "docker:test": "docker compose exec backend npm test",
    "docker:test-watch": "docker compose exec backend npm run test:watch",
    "docker:clean": "docker compose down -v --rmi all",
    "docker:clean-volumes": "docker compose down -v",
    "docker:shell-backend": "docker compose exec backend sh",
    "docker:shell-frontend": "docker compose exec frontend sh",
    "docker:shell-db": "docker compose exec postgres bash",
    "docker:install": "docker compose run --rm backend npm ci && docker compose run --rm frontend npm ci",
    "docker:health": "echo 'Checking service health...' && docker compose ps && echo '' && echo 'PostgreSQL health check:' && docker compose exec postgres pg_isready -U family_recipes_user -d family_recipes_db || echo 'PostgreSQL not ready' && echo '' && echo 'Backend health check:' && curl -s http://localhost:5001/api/health || echo 'Backend not responding' && echo '' && echo 'Frontend health check:' && curl -s http://localhost:5173 || echo 'Frontend not responding'"
  },
  "devDependencies": {
    "eslint": "^8.57.0",
    "prettier": "^3.3.3"
  },
  "engines": {
    "node": ">=20.0.0"
  }
}
